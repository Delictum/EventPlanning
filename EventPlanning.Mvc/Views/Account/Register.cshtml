@model EventPlanning.Mvc.ViewModel.RegisterModel

@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.RegisterViewModel.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.RegisterViewModel.Email, new { @class = "form-control", id = "emailField" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.RegisterViewModel.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.RegisterViewModel.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.RegisterViewModel.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.RegisterViewModel.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>

    <h5>Profile data.</h5>
    <hr />

    <div class="form-group">
        @Html.LabelFor(m => m.FullName.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.FullName.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FullName.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.FullName.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.FullName.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FullName.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.FullName.SureName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.FullName.SureName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FullName.SureName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Employee.Position.JobTitle, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownList("PositionId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Employee.PositionId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Employee.Group.GroupName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownList("GroupId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Employee.GroupId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Employee.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Employee.Birthday, new { htmlAttributes = new { @class = "form-control", id = "dateField" } })
            @Html.ValidationMessageFor(model => model.Employee.Birthday, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Employee.BiologicalFloor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Employee.BiologicalFloor, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Employee.BiologicalFloor, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Employee.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Employee.Adress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Employee.Adress, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Employee.AmountChildren, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Employee.AmountChildren, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Employee.AmountChildren, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    @Scripts.Render("~/bundles/jquery")
    @Styles.Render("~/Content/themes/base")
    @Scripts.Render("~/bundles/jqueryui")


    <script type="text/javascript">
        $(function() {
            $("#dateField")
                .datepicker({
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-65:-17",
                    dateFormat: 'dd-M-yy'
                })
                .get(0).setAttribute("type", "text");
        });

        var email;

        $(function() {
            $("#emailField").change(function() {
                email = $("#emailField").val();

                $.ajax({
                    url: "testingLoginEmail.php",
                    type: "GET",
                    data: "login=" + email,
                    cache: false,
                    success: function(response) {
                        if (response == "no") {
                            $("#emailField").next().hide().text("Логин  занят").css("color", "red").fadeIn(400);
                            $("#emailField").removeClass().addClass("inputRed");
                        } else {
                            $("#emailField").removeClass().addClass("inputGreen");
                            $("#emailField").next().text("");
                        }
                    }
                });

            });
            $("#login").keyup(function() {
                $("#login").removeClass();
                $("#login").next().text("");
            });
        });
    </script>
}
