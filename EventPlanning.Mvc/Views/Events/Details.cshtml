@using EventPlanning.Mvc.Models.Entities
@model EventPlanning.Mvc.Models.Entities.Event

@{
    ViewBag.Title = Model.EventTitle;
}

<h2>@Model.EventTitle (@Model.EventCategory)</h2>

@if (Model.EventVisible || User.IsInRole("admin"))
{
    <div>

        <div class="row">
            <div class="col-md-10">
                <h6>@Model.EventDate (@Model.RepeatEventType)</h6>
            </div>

            @if (User.IsInRole("admin"))
            {
                <div class="col-md-2">
                    <a href="@Url.RouteUrl("Default", new {controller = "Events", action = string.Join(string.Empty, "ExportExcel/" + Model.EventId)})">Скачать excel</a>
                </div>
            }
        </div>

        <div>
            <h6><em>@ViewBag.Message</em></h6>
        </div>

        <hr/>
        <div class="row">
            <div class="col-md-6">
                @{
                    try
                    {
                        var base64 = Convert.ToBase64String(Model.EventImage);
                        var imgSrc = $"data:image/gif;base64,{base64}";
                        <img src="@imgSrc" alt="Ошибка загрузки изображения" height="400" , width="350" />
                    }
                    catch (Exception)
                    {
                        // ignored
                    }
                }

            </div>

            <div class="col-md-6">
                <p>
                    @Model.EventDescription
                </p>


                @if (Model.SplitNumberGroups != 0)
                {
                    <br />

                    <p>
                        Количество групп: @Model.SplitNumberGroups
                    </p>
                }
                else if (Model.SplitNumberParticipants != 0)
                {
                    <br />

                    <p>
                        Количество участников в группе: @Model.SplitNumberParticipants
                    </p>
                }


                <br />

                @if (ViewBag.Rewards.Count > 0)
                {
                    <p>Награды:</p>
                    <ul title="Rewards:">
                        @foreach (var reward in ViewBag.Rewards)
                        {
                            <li>
                                @reward.AwardName
                            </li>
                        }
                    </ul>
                }
                
                @if (Model.MaximumNumberParticipants != 0)
                {
                    <p>
                        <em>
                            Максимальное количество участников: @Model.MaximumNumberParticipants
                            Оставшиеся места: @(Model.MaximumNumberParticipants - ViewBag.CurrentAmountParticipants)
                        </em>
                    </p>
                }
                @if (User.IsInRole("admin") && Model.EventCategory == EventCategory.Поход)
                {
                    <p>
                        В поход понадобятся 4-местные палатки в количестве: @(ViewBag.CurrentAmountParticipants / 4 + 1).
                        <ul>
                            Еды в день:
                            <li>
                                макарнные изделия - @(ViewBag.CurrentAmountParticipants * 0.3) кг.;
                            </li>
                            <li>
                                тушенка -  @ViewBag.CurrentAmountParticipants шт.;
                            </li>
                            <li>
                                вода -  @(ViewBag.CurrentAmountParticipants * 2) л.;
                            </li>
                            <li>
                                шашлык - @(ViewBag.CurrentAmountParticipants * 0.25) кг.;
                            </li>
                            <li>
                                овощи - @(ViewBag.CurrentAmountParticipants * 0.2) кг.;
                            </li>
                        </ul>
                    </p>
                }
            </div>
        </div>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div style="padding-bottom: 30px">
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                @Html.HiddenFor(model => model.EventId)
                <div class="form-group" align="center">
                    <div class="col-md-offset-2 col-md-10">
                        @if (ViewBag.SignUp)
                        {
                            if (!ViewBag.Message.Contains("Unable to unsubscribe after recording!"))
                            {
                                <input type="submit" value="Отписаться" class="btn btn-default"/>
                            }
                        }
                        else
                        {
                            <input type="submit" value="Подписаться" class="btn btn-default" id="submitSignUp"/>
                        }
                    </div>
                </div>
            </div>
        }


        @if (User.IsInRole("admin"))
        {
            <table class="table" style="padding: 10px">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Employees.FirstOrDefault().FullName.LastName)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Employees.FirstOrDefault().FullName.FirstName)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Employees.FirstOrDefault().FullName.SureName)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Employees.FirstOrDefault().Group.GroupName)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Employees.FirstOrDefault().Position.JobTitle)
                    </th>

                </tr>

                @foreach (var employee in Model.Employees)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => employee.FullName.LastName)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => employee.FullName.FirstName)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => employee.FullName.SureName)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => employee.Group.GroupName)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => employee.Position.JobTitle)
                        </td>
                    </tr>
                }
            </table>
        }
    </div>
}
else
{
    <div>
        <h3><em>Событие временно недоступно.</em></h3>
    </div>
}

@if (User.IsInRole("admin"))
{
    <p>
        @Html.ActionLink("Редактирование", "Edit", new { id = Model.EventId }) |
        @Html.ActionLink("Назад к списку", "Index")
    </p>
}
else
{
    <p>
        @Html.ActionLink("Назад к списку", "Index")
    </p>
}
